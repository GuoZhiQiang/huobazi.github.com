<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 推荐阅读 | 武眉博]]></title>
  <link href="http://huobazi.github.com/blog/tag/tui-jian-yue-du/atom.xml" rel="self"/>
  <link href="http://huobazi.github.com/"/>
  <updated>2013-07-14T10:40:10+08:00</updated>
  <id>http://huobazi.github.com/</id>
  <author>
    <name><![CDATA[Marble Wu]]></name>
    <email><![CDATA[huobazi@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[HG232破解一例]]></title>
    <link href="http://huobazi.github.com/blog/2012/02/25/hg232/"/>
    <updated>2012-02-25T14:25:00+08:00</updated>
    <id>http://huobazi.github.com/blog/2012/02/25/hg232</id>
    <content type="html"><![CDATA[<h3>0. 默认超级账户</h3>

<p>如果电信没有改过你的猫账户，可以尝试使用下面的信息登陆，如果不可以在进入后面的步骤1和2破解
<code>帐号： telecomadmin 密码：nE7jA%5m (注意大小写)</code></p>

<h3>1. 下载配置文件</h3>

<p>猫上插入U盘，下面两种方法都可以，您挑一种吧。</p>

<!--more-->


<h5>1.1 手工操作&mdash;&mdash;乐趣</h5>

<p>用猫后面印刷的普通用户useradmin登陆，这个用户登陆进去什么高级全选都木有，但是表着急，我这么干的，浏览器用firefox，如果木有就去下载，然后装上firebug，去看隐藏的html元素吧，把样式表的disply:none;都禁止掉，什么 备份配置文件、启动从U盘加载配置、回复出厂值、日志等等都出来了吧，插入U盘，点击备份按钮，文件就下载下来了。</p>

<h5>1.2 连接下载&mdash;&mdash;直接</h5>

<p>同时通过分析html和javascript代码，我直接把下载地址找到了，如果你不想或者木有firefox&amp;&amp;firebug，那就直接访问：
<a href="http://192.168.1.1/html/ehomeclient/cfgUSBRestore.cgi?coverusbpath=usb1_1">http://192.168.1.1/html/ehomeclient/cfgUSBRestore.cgi?coverusbpath=usb1_1</a> 这是firebug分析抓包后得到的地址，嘿嘿。
配置文件就能成功被备份出了，在U盘根目录生成的e8_Config_backup文件夹里ctce8_HG232.cfg。</p>

<h3>2. 解密配置文件</h3>

<p>网上有现成的编译好的工具可以直接用，不过作为技术宅男，当然要做点有挑战性的了，我弄了俩，一个javascript写的，一个ruby写的，开源滴，您用着放心哦</p>

<h5>2.1 无ruby环境</h5>

<p>将代码库里的decrypt.html另存到本地，然后用浏览器打开，在Source里粘贴用ctce8_HG232.cfg文件的内容，
点击解密按钮,就可进行解密，加密同理。</p>

<h5>2.2 有ruby环境</h5>

<p>如果有ruby运行环境，则可以使用代码库里的decrypt.rb另存到本地来，把要破解或者加密的文件放入相同目录,在命令行运行 ruby decrypt.rb 按照提示做就可以了</p>

<h5>2.3 超级管理员密码</h5>

<p>到文本编辑软件打开破解后的文件，查找telecomadmin，找到</p>

<pre><code>&lt;X_ATP_UserInfoInstance InstanceID="1" Username="telecomadmin" Userpassword="telecomadmin******" Userlevel="2" Busy="0" LoginIP=""/&gt;
</code></pre>

<p>Userpassword里面的就是超级管理员的密码了。一般是telecomadmin加串数字。</p>

<h3>3. 设置</h3>

<p>后面的情况就大同小异了，网上很多介绍，开路由，，自动拨号，开无线，一堆一堆的教程，另外有些设置在管理平台是没有的，比如下面的ftp和telnet设置，如果又必要使用这些相功能，修改配置文件，加密后，登陆后台后启用从usb恢复设备这个功能，然后把配置文件夹自己修改后，再恢复回去，就可以了。</p>

<pre><code>&lt;X_CT-COM_ServiceManage TelnetEnable="0" TelnetUserName="!!Huawei" TelnetPassword="@HuaweiHgw" TelnetPort="23" WebWanAccessEnable="0" FtpEnable="1" FtpUserName="ftp" FtpPassword="ftp" FtpPort="21" FtpPath="/mnt"/&gt;
</code></pre>

<h3>4. 代码</h3>

<p>本文提及的代码可以在<a href="https://github.com/huobazi/hg232">https://github.com/huobazi/hg232</a>下载到</p>

<h3>5.  其他</h3>

<p>4个RJ45口理论上都可以设置成接电脑或者itv输出，并不局限于写了itv的那个口。另外，也可以增加一个itv无线网络，在你的机顶盒上加个无线网卡，机顶盒拨入此无线网络，这样就不用拉一堆堆的线了，很适用于前期没有做好布线设计的朋友。</p>

<p>itv 不选择 无线的话 要选VLAN透传，选无线是VLAN修改</p>

<p>另外，网上有现成的改好的配置文件下载，<a href="http://email2me.blog.163.com/blog/static/34347033201101094128402/">http://email2me.blog.163.com/blog/static/34347033201101094128402/</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[京东新蛋攻防]]></title>
    <link href="http://huobazi.github.com/blog/2010/04/30/360buy-vs-newegg/"/>
    <updated>2010-04-30T12:26:00+08:00</updated>
    <id>http://huobazi.github.com/blog/2010/04/30/360buy-vs-newegg</id>
    <content type="html"><![CDATA[<p>这是一片不断膨胀、愈演愈烈的虚拟战场。每一位统帅都着迷于它的独特魅力——任何势力的盛衰都取决于无数素未谋面的人的鼠标点击。每一位统帅也都必须铭记：实体世界里“强攻弱守”的军事规律已经在此失效。这里唯一可以遵循的生死法则是，无论势力强弱，一旦站到防守的位置上，那么溃败将接踵而来，且来得出乎意料地快</p>


<p><!--more--></p>


<p><a href="http://finance.ifeng.com/news/20100429/2128118.shtml">http://finance.ifeng.com/news/20100429/2128118.shtml</a></p>


<p>京东新蛋攻防<br />来源：凤凰网    日期：10年04月30日 10:35:18</p>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在线编辑器的一个新选择。]]></title>
    <link href="http://huobazi.github.com/blog/2009/10/27/kissy-editor/"/>
    <updated>2009-10-27T20:16:00+08:00</updated>
    <id>http://huobazi.github.com/blog/2009/10/27/kissy-editor</id>
    <content type="html"><![CDATA[<p>今天<a title="http://lifesinger.org/" href="http://lifesinger.org/" target="_blank">lifesinger</a>发布了<a title="kiss editor" href="http://lifesinger.org/blog/2009/10/kissy-editor/" target="_blank">淘宝编辑器</a>,</p>


<p>可以在这里看到<a href="http://kissy.googlecode.com/svn/trunk/src/editor/demo/basic.html" target="_blank">演示</a></p>


<p>介绍可以看这里，<a href="http://lifesinger.org/blog/2009/10/kissy-editor/">http://lifesinger.org/blog/2009/10/kissy-editor/</a></p>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[【How to】解决Visio虚线复制到word中变为实线]]></title>
    <link href="http://huobazi.github.com/blog/2009/10/10/visio-dashed/"/>
    <updated>2009-10-10T22:55:00+08:00</updated>
    <id>http://huobazi.github.com/blog/2009/10/10/visio-dashed</id>
    <content type="html"><![CDATA[<p>添加 MetafileDashLineAsSolid 到以下注册表位置，类型DWORD。</p>


<p> • Visio 2007<br />HKEY_CURRENT_USER\Software\Microsoft\Office\12.0\Visio\Application<br />• Visio 2003<br />HKEY_CURRENT_USER\Software\Microsoft\Office\11.0\Visio\Application<br />属性值：</p>


<p>• 0：虚线或虚线行执行不替换为实线。<br />• 1：虚线或虚线极端情形中行只替换为实线。 100 倍的原始文件大小时可能导致文件大小中增加例如, 替换实线为虚线或虚线行。 <br />• 2：替换实线用于当合理虚线或虚线行。 这是默认值。 <br />• 3：始终替换为实线虚线或虚线行。 </p>


<p> </p>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[服务器状态代码含义]]></title>
    <link href="http://huobazi.github.com/blog/2009/09/02/%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%8A%B6%E6%80%81%E4%BB%A3%E7%A0%81%E5%90%AB%E4%B9%89/"/>
    <updated>2009-09-02T23:48:00+08:00</updated>
    <id>http://huobazi.github.com/blog/2009/09/02/服务器状态代码含义</id>
    <content type="html"><![CDATA[<h2 class="title">服务器状态代码含义google来的，存档。</h2>


<p class="title"> </p>


<p><!--more--></p>


<table border="1" cellspacing="1" cellpadding="4" width="100%" align="center" bordercolor="#009999"><tbody>
<tr>
<td width="25" align="center">100</td>
<td width="150" align="center">Continue</td>
<td>初始的请求已经接受，客户应当继续发送请求的其余部分。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">101</td>
<td align="center">Switching Protocols</td>
<td>服务器将遵从客户的请求转换到另外一种协议（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">200</td>
<td align="center">OK</td>
<td>一切正常，对GET和POST请求的应答文档跟在后面。</td>
</tr>
<tr>
<td align="center">201</td>
<td align="center">Created</td>
<td>服务器已经创建了文档，Location头给出了它的URL。</td>
</tr>
<tr>
<td align="center">202</td>
<td align="center">Accepted</td>
<td>已经接受请求，但处理尚未完成。</td>
</tr>
<tr>
<td align="center">203</td>
<td align="center">Non-Authoritative Information</td>
<td>文档已经正常地返回，但一些应答头可能不正确，因为使用的是文档的拷贝（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">204</td>
<td align="center">No Content</td>
<td>没有新文档，浏览器应该继续显示原来的文档。如果用户定期地刷新页面，而Servlet可以确定用户文档足够新，这个状态代码是很有用的。</td>
</tr>
<tr>
<td align="center">205</td>
<td align="center">Reset Content</td>
<td>没有新的内容，但浏览器应该重置它所显示的内容。用来强制浏览器清除表单输入内容（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">206</td>
<td align="center">Partial Content</td>
<td>客户发送了一个带有Range头的GET请求，服务器完成了它（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">300</td>
<td align="center">Multiple Choices</td>
<td>客户请求的文档可以在多个位置找到，这些位置已经在返回的文档内列出。如果服务器要提出优先选择，则应该在Location应答头指明。</td>
</tr>
<tr>
<td align="center">301</td>
<td align="center">Moved Permanently</td>
<td>客户请求的文档在其他地方，新的URL在Location头中给出，浏览器应该自动地访问新的URL。</td>
</tr>
<tr>
<td align="center">302</td>
<td align="center">Found</td>
<td>
<p>类似于301，但新的URL应该被视为临时性的替代，而不是永久性的。注意，在HTTP1.0中对应的状态信息是“Moved Temporatily”。<br />出现该状态代码时，浏览器能够自动访问新的URL，因此它是一个很有用的状态代码。</p>
<p>注意这个状态代码有时候可以和301替换使用。例如，如果浏览器错误地请求http://host/~user（缺少了后面的斜杠），有的服务器返回301，有的则返回302。</p>
<p>严格地说，我们只能假定只有当原来的请求是GET时浏览器才会自动重定向。请参见307。</p>
</td>
</tr>
<tr>
<td align="center">303</td>
<td align="center">See Other</td>
<td>类似于301/302，不同之处在于，如果原来的请求是POST，Location头指定的重定向目标文档应该通过GET提取（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">304</td>
<td align="center">Not Modified</td>
<td>客户端有缓冲的文档并发出了一个条件性的请求（一般是提供If-Modified-Since头表示客户只想比指定日期更新的文档）。服务器告诉客户，原来缓冲的文档还可以继续使用。</td>
</tr>
<tr>
<td align="center">305</td>
<td align="center">Use Proxy</td>
<td>客户请求的文档应该通过Location头所指明的代理服务器提取（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">307</td>
<td align="center">Temporary Redirect</td>
<td>和302（Found）相同。许多浏览器会错误地响应302应答进行重定向，即使原来的请求是POST，即使它实际上只能在POST请求的应答是303时才能重定向。由于这个原因，HTTP 1.1新增了307，以便更加清除地区分几个状态代码：当出现303应答时，浏览器可以跟随重定向的GET和POST请求；如果是307应答，则浏览器只能跟随对GET请求的重定向。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">400</td>
<td align="center">Bad Request</td>
<td>请求出现语法错误。</td>
</tr>
<tr>
<td align="center">401</td>
<td align="center">Unauthorized</td>
<td>客户试图未经授权访问受密码保护的页面。应答中会包含一个WWW-Authenticate头，浏览器据此显示用户名字/密码对话框，然后在填写合适的Authorization头后再次发出请求。</td>
</tr>
<tr>
<td align="center">403</td>
<td align="center">Forbidden</td>
<td>资源不可用。服务器理解客户的请求，但拒绝处理它。通常由于服务器上文件或目录的权限设置导致。</td>
</tr>
<tr>
<td align="center">404</td>
<td align="center">Not Found</td>
<td>无法找到指定位置的资源。这也是一个常用的应答。</td>
</tr>
<tr>
<td align="center">405</td>
<td align="center">Method Not Allowed</td>
<td>请求方法（GET、POST、HEAD、DELETE、PUT、TRACE等）对指定的资源不适用。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">406</td>
<td align="center">Not Acceptable</td>
<td>指定的资源已经找到，但它的MIME类型和客户在Accpet头中所指定的不兼容（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">407</td>
<td align="center">Proxy Authentication Required</td>
<td>类似于401，表示客户必须先经过代理服务器的授权。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">408</td>
<td align="center">Request Timeout</td>
<td>在服务器许可的等待时间内，客户一直没有发出任何请求。客户可以在以后重复同一请求。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">409</td>
<td align="center">Conflict</td>
<td>通常和PUT请求有关。由于请求和资源的当前状态相冲突，因此请求不能成功。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">410</td>
<td align="center">Gone</td>
<td>所请求的文档已经不再可用，而且服务器不知道应该重定向到哪一个地址。它和404的不同在于，返回407表示文档永久地离开了指定的位置，而404表示由于未知的原因文档不可用。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">411</td>
<td align="center">Length Required</td>
<td>服务器不能处理请求，除非客户发送一个Content-Length头。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">412</td>
<td align="center">Precondition Failed</td>
<td>请求头中指定的一些前提条件失败（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">413</td>
<td align="center">Request Entity Too Large</td>
<td>目标文档的大小超过服务器当前愿意处理的大小。如果服务器认为自己能够稍后再处理该请求，则应该提供一个Retry-After头（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">414</td>
<td align="center">Request URI Too Long</td>
<td>URI太长（HTTP 1.1新）。</td>
</tr>
<tr>
<td align="center">416</td>
<td align="center">Requested Range Not Satisfiable</td>
<td>服务器不能满足客户在请求中指定的Range头。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">500</td>
<td align="center">Internal Server Error</td>
<td>服务器遇到了意料不到的情况，不能完成客户的请求。</td>
</tr>
<tr>
<td align="center">501</td>
<td align="center">Not Implemented</td>
<td>服务器不支持实现请求所需要的功能。例如，客户发出了一个服务器不支持的PUT请求。</td>
</tr>
<tr>
<td align="center">502</td>
<td align="center">Bad Gateway</td>
<td>服务器作为网关或者代理时，为了完成请求访问下一个服务器，但该服务器返回了非法的应答。</td>
</tr>
<tr>
<td align="center">503</td>
<td align="center">Service Unavailable</td>
<td>服务器由于维护或者负载过重未能应答。例如，Servlet可能在数据库连接池已满的情况下返回503。服务器返回503时可以提供一个Retry-After头。</td>
</tr>
<tr>
<td align="center">504</td>
<td align="center">Gateway Timeout</td>
<td>由作为代理或网关的服务器使用，表示不能及时地从远程服务器获得应答。（HTTP 1.1新）</td>
</tr>
<tr>
<td align="center">505</td>
<td align="center">HTTP Version Not Supported</td>
<td>服务器不支持请求中所指明的HTTP版本。（HTTP 1.1新）</td>
</tr>
</tbody></table>


<p class="aaa"> </p>


<p></p>
]]></content>
  </entry>
  
</feed>
